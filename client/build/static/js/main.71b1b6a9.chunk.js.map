{"version":3,"sources":["assests/check.svg","App.js","reportWebVitals.js","index.js"],"names":["App","state","formData","firstName","lastName","email","org","euResident","advances","alerts","otherCommunications","errorMessage","atLeastOneCheckbox","inputHandler","e","inputType","console","log","val","target","value","trim","setState","isValidEmail","test","checked","submitFormHandler","preventDefault","isValidFirstName","length","isValidLastName","isValisEuResident","advancesCheckboxVal","alertsCheckboxVal","otherCommunicationsCheckboxVal","isValidCheckboxes","encodeURIComponent","axios","post","params","firstNNN","then","res","data","resetFormHandler","this","className","style","color","method","action","encType","htmlFor","type","name","id","onChange","ev","paddingTop","backgroundColor","border","src","checkSvg","alt","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b1b6a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check.95722f91.svg\";","\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\n\nimport checkSvg from './assests/check.svg';\n\nclass App extends Component {\n    state = {\n        formData: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            org: '',\n            euResident: 'none',\n            advances: false,\n            alerts: false,\n            otherCommunications: false,\n        },\n        errorMessage: {\n            firstName: null,\n            lastName: null,\n            email: null,\n            euResident: null,\n            atLeastOneCheckbox: null,\n        },\n    }\n\n    inputHandler = (e, inputType) =>{\n        console.log('inputType', inputType);\n\n        if(inputType === 'firstName'){\n            const val = e.target.value.trim();\n            const formData = {...this.state.formData};\n            formData.firstName = val;\n\n            this.setState({\n                formData: formData\n            });\n            \n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            if(val){\n                errorMessage.firstName = false;\n            }\n            else{\n                errorMessage.firstName = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'lastName'){\n            const val = e.target.value.trim();\n            const formData = {...this.state.formData};\n            formData.lastName = val;\n\n            this.setState({\n                formData: formData\n            });\n\n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            if(val){\n                errorMessage.lastName = false;\n            }\n            else{\n                errorMessage.lastName = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'email'){\n            const val = e.target.value.trim();\n            const formData = {...this.state.formData};\n            formData.email = val;\n\n            this.setState({\n                formData: formData\n            });\n\n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            const patt = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n            const isValidEmail = patt.test(val);\n\n            // console.log('email val', isValidEmail);\n\n            if(isValidEmail){\n                errorMessage.email = false;\n            }\n            else{\n                errorMessage.email = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'org'){\n            const val = e.target.value;\n            const formData = {...this.state.formData};\n            formData.org = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n        else if(inputType === 'euResident'){\n            const val = e.target.value;\n            const formData = {...this.state.formData};\n            formData.euResident = val;\n\n            this.setState({\n                formData: formData\n            });\n\n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            if(val !== 'none'){\n                errorMessage.euResident = false;\n            }\n            else{\n                errorMessage.euResident = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'advances'){\n            const val = e.target.checked;\n            console.log('checkbox val ', val);\n            const formData = {...this.state.formData};\n            formData.advances = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n        else if(inputType === 'alerts'){\n            const val = e.target.checked;\n            const formData = {...this.state.formData};\n            formData.alerts = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n        else if(inputType === 'otherCommunications'){\n            const val = e.target.checked;\n            const formData = {...this.state.formData};\n            formData.otherCommunications = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n    }\n\n    submitFormHandler = (e) =>{\n        // console.log('button pressed');\n        e.preventDefault();\n\n        // form validation before submitting data\n        const isValidFirstName = this.state.formData.firstName.length > 0 ? true : false;\n        const isValidLastName = this.state.formData.lastName.length > 0 ? true : false;\n        const patt = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n        const isValidEmail = patt.test(this.state.formData.email);\n        const isValisEuResident = this.state.formData.euResident !== 'none' ? true : false;\n\n        // check if at least one checkbox is selected\n        const advancesCheckboxVal = this.state.formData.advances;\n        const alertsCheckboxVal = this.state.formData.alerts;\n        const otherCommunicationsCheckboxVal = this.state.formData.otherCommunications;\n\n        let isValidCheckboxes = false;\n        if(advancesCheckboxVal || alertsCheckboxVal || otherCommunicationsCheckboxVal){\n            isValidCheckboxes = true;\n        }\n\n        if(isValidFirstName && isValidLastName && isValidEmail && isValisEuResident && isValidCheckboxes){\n            // console.log('submitting form');\n\n            const data = {\n                firstName: encodeURIComponent(this.state.formData.firstName),\n                lastName: this.state.formData.lastName,\n                email: this.state.formData.email,\n                org: this.state.formData.org,\n                euResident: this.state.formData.euResident,\n                advances: this.state.formData.advances,\n                alerts: this.state.formData.alerts,\n                otherCommunications: this.state.formData.otherCommunications,\n            }\n\n            const url = '/user-info';\n\n            axios.post(url, null, { params: {\n                firstNNN: 'hi',\n            }})\n            .then(res =>{\n                console.log('res.data', res.data);\n            });\n        }\n        else{\n            // console.log('not submitting form');\n            // e.preventDefault();\n\n            // show error messages\n            const errorMessage = {...this.state.errorMessage};\n            errorMessage.firstName = !isValidFirstName;\n            errorMessage.lastName = !isValidLastName;\n            errorMessage.email = !isValidEmail;\n            errorMessage.euResident = !isValisEuResident;\n            errorMessage.atLeastOneCheckbox = !isValidCheckboxes;\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n    \n    }\n\n    resetFormHandler = (e) =>{\n        // console.log('resetting');\n\n        this.setState({\n            formData: {\n                firstName: '',\n                lastName: '',\n                email: '',\n                org: '',\n                euResident: 'none',\n                advances: false,\n                alerts: false,\n                otherCommunications: false,\n            },\n            errorMessage: {\n                firstName: null,\n                lastName: null,\n                email: null,\n                euResident: null,\n                atLeastOneCheckbox: null,\n            },\n        });\n    }\n\n    render() {\n        console.log('state======================', this.state);\n        return (\n            <div className='App'>\n                <section>\n                    <h1>Sign up for email updates</h1>\n                    <div style={{color: 'gray'}}>*indicates Required Field</div>\n\n                    <form method='POST' action=\"/user-info\" encType='application/x-www-form-urlencoded'>\n                        <div className='displayFlex'>\n                            <div className='flex50'>\n                                <div className='errorMessage'>{this.state.errorMessage.firstName ? 'First name is required' : null}</div>\n                                <label htmlFor=\"firstName\" className='textInputLabelText'>FIRST NAME*</label>\n                                <input type=\"text\"\n                                    name='firstName'\n                                    id='firstName'\n                                    onChange={(ev)=>this.inputHandler(ev, 'firstName')}\n                                    value={this.state.formData.firstName}\n                                    className={this.state.errorMessage.firstName ? 'errorInputStyle' : null}\n                                />\n                            </div>\n\n                            <div className='flex50'>\n                                <div className='errorMessage'>{this.state.errorMessage.lastName ? 'Last name is required' : null}</div>\n                                <label htmlFor=\"lastName\" className='textInputLabelText'>LAST NAME*</label>\n                                <input type=\"text\"\n                                    name='lastName'\n                                    id='lastName'\n                                    onChange={(ev)=>this.inputHandler(ev, 'lastName')}\n                                    value={this.state.formData.lastName}\n                                    className={this.state.errorMessage.lastName ? 'errorInputStyle' : null}\n                                />\n                            </div>\n                        </div>\n                        \n                        <div className='displayFlex'>\n                            <div className='flex50'>\n                                <div className='errorMessage'>{this.state.errorMessage.email ? 'Email address is required' : null}</div>\n                                <label htmlFor=\"email\" className='textInputLabelText'>EMAIL ADDRESS*</label>\n                                <input type=\"text\"\n                                    name='email'\n                                    id='email'\n                                    onChange={(ev)=>this.inputHandler(ev, 'email')}\n                                    value={this.state.formData.email}\n                                    className={this.state.errorMessage.email ? 'errorInputStyle' : null}\n                                />\n                            </div>\n\n                            <div className='flex50'>\n                                <div className='errorMessage'></div>\n                                <label htmlFor=\"org\" className='textInputLabelText'>ORGANIZATION</label>\n                                <input type=\"text\"\n                                    name='org'\n                                    id='org'\n                                    onChange={(ev)=>this.inputHandler(ev, 'org')}\n                                    value={this.state.formData.org}\n                                />\n                            </div>\n                        </div>\n\n                        <div>\n                            <div className='errorMessage'>{this.state.errorMessage.euResident ? 'EU resident is required' : null}</div>\n                            <label htmlFor=\"euResident\" className='selectLabelText'>EU RESIDENT*</label><br/>\n                            <select name=\"euResident\" \n                                id=\"euResident\"\n                                onChange={(ev)=>this.inputHandler(ev, 'euResident')}\n                                value={this.state.formData.euResident}\n                                className={this.state.errorMessage.euResident ? 'errorInputStyle' : null}\n                            >\n                                <option value=\"none\">- SELECT ONE -</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                            </select>\n                        </div>\n                        \n                        <div style={{paddingTop: '20px'}}></div>\n\n                        {/* error message for checkbox */}\n                        <div className='errorMessage'>{this.state.errorMessage.atLeastOneCheckbox ? 'One or more options are required' : null}</div>\n\n                        <div className='displayFlex flexWrap-wrap'>    \n                            <div className='checkboxDiv'>\n                                <label htmlFor=\"advances\" className='checkboxLabel'>\n                                    <input type=\"checkbox\" \n                                        name='advances'\n                                        id='advances'\n                                        onChange={(ev)=>this.inputHandler(ev, 'advances')} \n                                        checked={this.state.formData.advances}\n                                    />\n                                    <div className='faceCheckboxBox' style={{\n                                        backgroundColor: this.state.formData.advances ? '#803093' : 'white',\n                                        border: this.state.formData.advances ? 'none' : '3px solid #cfe7e5',\n                                    }}>\n                                        {this.state.formData.advances ? <img src={checkSvg} alt=\"check\"/> : null}\n                                    </div>\n                                    <div className='checkboxLabelText'>ADVANCES</div>\n                                </label>\n                            </div>\n\n                            <div className='checkboxDiv'>\n                                <label htmlFor=\"alerts\" className='checkboxLabel'>\n                                    <input type=\"checkbox\" \n                                        name='alerts'\n                                        id='alerts'\n                                        onChange={(ev)=>this.inputHandler(ev, 'alerts')} \n                                        checked={this.state.formData.alerts}\n                                    />\n                                    <div className='faceCheckboxBox' style={{\n                                        backgroundColor: this.state.formData.alerts ? '#803093' : 'white',\n                                        border: this.state.formData.alerts ? 'none' : '3px solid #cfe7e5',\n                                    }}>                                        \n                                        {this.state.formData.alerts ? <img src={checkSvg} alt=\"check\"/> : null}\n                                    </div>\n                                    <div className='checkboxLabelText'>ALERTS</div>\n                                </label>\n                            </div>\n\n                            <div className='checkboxDiv'>\n                                <label htmlFor=\"otherCommunications\" className='checkboxLabel'>\n                                    <input type=\"checkbox\" \n                                        name='otherCommunications'\n                                        id='otherCommunications'\n                                        onChange={(ev)=>this.inputHandler(ev, 'otherCommunications')} \n                                        checked={this.state.formData.otherCommunications}\n                                    />\n                                    <div className='faceCheckboxBox' style={{\n                                        backgroundColor: this.state.formData.otherCommunications ? '#803093' : 'white',\n                                        border: this.state.formData.otherCommunications ? 'none' : '3px solid #cfe7e5',\n                                    }}>                                        \n                                        {this.state.formData.otherCommunications ? <img src={checkSvg} alt=\"check\"/> : null}\n                                    </div>\n                                    <div className='checkboxLabelText'>OTHER COMMUNICATIONS</div>\n                                </label>\n                            </div>\n                        </div>                        \n\n                        <div style={{paddingTop: '80px'}}></div>\n\n                        <button type='submit' onClick={this.submitFormHandler} className='submitButton'>SUBMIT</button>\n                        <button type='button' onClick={this.resetFormHandler} className='resetButton'>RESET</button>\n\n                        <div style={{paddingTop: '60px'}}></div>\n\n                    </form>\n\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}