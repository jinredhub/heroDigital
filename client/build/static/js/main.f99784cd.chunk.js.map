{"version":3,"sources":["assests/check.svg","App.js","reportWebVitals.js","index.js"],"names":["App","state","formData","firstName","lastName","email","org","resident","advances","alerts","otherCommunications","errorMessage","inputHandler","e","inputType","console","log","val","target","value","trim","setState","checked","submitFormHandler","firstNameEncoded","encodeURIComponent","resetFormHandler","this","className","style","color","method","action","encType","htmlFor","type","name","id","onChange","ev","paddingTop","backgroundColor","src","checkSvg","alt","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f99784cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check.95722f91.svg\";","\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\n\nimport checkSvg from './assests/check.svg';\n\nclass App extends Component {\n    state = {\n        formData: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            org: '',\n            resident: 'none',\n            advances: false,\n            alerts: false,\n            otherCommunications: false,\n        },\n        errorMessage: {\n            firstName: false,\n            lastName: false,\n            email: false,\n            resident: false,\n        },\n    }\n\n    inputHandler = (e, inputType) =>{\n        console.log('inputType', inputType);\n\n        if(inputType === 'firstName'){\n            const val = e.target.value.trim();\n            const formData = {...this.state.formData};\n            formData.firstName = val;\n\n            this.setState({\n                formData: formData\n            });\n            \n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            if(val){\n                errorMessage.firstName = false;\n            }\n            else{\n                errorMessage.firstName = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'lastName'){\n            const val = e.target.value.trim();\n            const formData = {...this.state.formData};\n            formData.lastName = val;\n\n            this.setState({\n                formData: formData\n            });\n\n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            if(val){\n                errorMessage.lastName = false;\n            }\n            else{\n                errorMessage.lastName = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'email'){\n            const val = e.target.value.trim();\n            const formData = {...this.state.formData};\n            formData.email = val;\n\n            this.setState({\n                formData: formData\n            });\n\n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            if(val){\n                errorMessage.email = false;\n            }\n            else{\n                errorMessage.email = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'org'){\n            const val = e.target.value;\n            const formData = {...this.state.formData};\n            formData.org = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n        else if(inputType === 'resident'){\n            const val = e.target.value;\n            const formData = {...this.state.formData};\n            formData.resident = val;\n\n            this.setState({\n                formData: formData\n            });\n\n            // show/hide error message\n            const errorMessage = {...this.state.errorMessage};\n\n            if(val !== 'none'){\n                errorMessage.resident = false;\n            }\n            else{\n                errorMessage.resident = true;\n            }\n\n            this.setState({\n                errorMessage: errorMessage\n            });\n        }\n        else if(inputType === 'advances'){\n            const val = e.target.checked;\n            console.log('checkbox val ', val);\n            const formData = {...this.state.formData};\n            formData.advances = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n        else if(inputType === 'alerts'){\n            const val = e.target.checked;\n            const formData = {...this.state.formData};\n            formData.alerts = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n        else if(inputType === 'otherCommunications'){\n            const val = e.target.checked;\n            const formData = {...this.state.formData};\n            formData.otherCommunications = val;\n\n            this.setState({\n                formData: formData\n            });\n        }\n    }\n\n    submitFormHandler = (e) =>{\n        console.log('submiting');\n        // e.preventDefault();\n\n        const firstName = 'dom+mouse';\n        const firstNameEncoded = encodeURIComponent(firstName);\n\n        // uriEncode only parameters and values (not the separator '&')\n\n        console.log('encoded: ', firstNameEncoded);\n    \n        // axios({\n        //     method: 'post',\n        //     url: '/userInfo',\n        //     data: {\n        //         firstName: 'hi',\n        //     }\n        // })\n        // .then( res =>{\n        //     console.log('res: ', res);\n        // });\n    }\n\n    resetFormHandler = () =>{\n        console.log('resetting');\n    }\n\n    render() {\n        console.log('state======================', this.state);\n        return (\n            <div className='App'>\n                <section>\n                    <h1>Sign up for email updates</h1>\n                    <div style={{color: 'gray'}}>*indicates Required Field</div>\n\n                    <form method='POST' action=\"/user-info\" encType='application/x-www-form-urlencoded'>\n                        <div className='displayFlex'>\n                            <div className='flex50'>\n                                <div className='errorMessage'>{this.state.errorMessage.firstName ? 'First name is required' : null}</div>\n                                <label htmlFor=\"firstName\" className='textInputLabelText'>FIRST NAME*</label>\n                                <input type=\"text\"\n                                    name='firstName'\n                                    id='firstName'\n                                    onChange={(ev)=>this.inputHandler(ev, 'firstName')}\n                                    value={this.state.formData.firstName}\n                                    className={this.state.errorMessage.firstName ? 'errorInputStyle' : null}\n                                />\n                            </div>\n\n                            <div className='flex50'>\n                                <div className='errorMessage'>{this.state.errorMessage.lastName ? 'Last name is required' : null}</div>\n                                <label htmlFor=\"lastName\" className='textInputLabelText'>LAST NAME*</label>\n                                <input type=\"text\"\n                                    name='lastName'\n                                    id='lastName'\n                                    onChange={(ev)=>this.inputHandler(ev, 'lastName')}\n                                    value={this.state.formData.lastName}\n                                    className={this.state.errorMessage.lastName ? 'errorInputStyle' : null}\n                                />\n                            </div>\n                        </div>\n                        \n                        <div className='displayFlex'>\n                            <div className='flex50'>\n                                <div className='errorMessage'>{this.state.errorMessage.email ? 'Email address is required' : null}</div>\n                                <label htmlFor=\"email\" className='textInputLabelText'>EMAIL ADDRESS*</label>\n                                <input type=\"text\"\n                                    name='email'\n                                    id='email'\n                                    onChange={(ev)=>this.inputHandler(ev, 'email')}\n                                    value={this.state.formData.email}\n                                    className={this.state.errorMessage.email ? 'errorInputStyle' : null}\n                                />\n                            </div>\n\n                            <div className='flex50'>\n                                <div className='errorMessage'></div>\n                                <label htmlFor=\"org\" className='textInputLabelText'>ORGANIZATION</label>\n                                <input type=\"text\"\n                                    name='org'\n                                    id='org'\n                                    onChange={(ev)=>this.inputHandler(ev, 'org')}\n                                    value={this.state.formData.org}\n                                />\n                            </div>\n                        </div>\n\n                        <div>\n                            <div className='errorMessage'>{this.state.errorMessage.resident ? 'EU resident is required' : null}</div>\n                            <label htmlFor=\"resident\" className='selectLabelText'>EU RESIDENT*</label><br/>\n                            <select name=\"resident\" \n                                id=\"resident\"\n                                onChange={(ev)=>this.inputHandler(ev, 'resident')}\n                                className={this.state.errorMessage.resident ? 'errorInputStyle' : null}\n                            >\n                                <option value=\"none\">- SELECT ONE -</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                            </select>\n                        </div>\n                        \n                        <div style={{paddingTop: '20px'}}></div>\n\n                        <div className='displayFlex'>    \n                            <div className='flex50'>\n                                <label htmlFor=\"advances\" className='checkboxLabel'>\n                                    <input type=\"checkbox\" \n                                        name='advances'\n                                        id='advances'\n                                        onChange={(ev)=>this.inputHandler(ev, 'advances')} \n                                        checked={this.state.formData.advances}\n                                    />\n                                    <div className='faceCheckboxBox' style={{backgroundColor: this.state.formData.advances ? '#803093' : 'white'}}>\n                                        {this.state.formData.advances ? <img src={checkSvg} alt=\"check\"/> : null}\n                                    </div>\n                                    <div className='checkboxLabelText'>ADVANCES</div>\n                                </label>\n                            </div>\n\n                            <div className='flex50'>\n                                <label htmlFor=\"alerts\" className='checkboxLabel'>\n                                    <input type=\"checkbox\" \n                                        name='alerts'\n                                        id='alerts'\n                                        onChange={(ev)=>this.inputHandler(ev, 'alerts')} \n                                        checked={this.state.formData.alerts}\n                                    />\n                                    <div className='faceCheckboxBox' style={{backgroundColor: this.state.formData.alerts ? '#803093' : 'white'}}>\n                                        {this.state.formData.alerts ? <img src={checkSvg} alt=\"check\"/> : null}\n                                    </div>\n                                    <div className='checkboxLabelText'>ALERTS</div>\n                                </label>\n                            </div>\n                        </div>\n\n                        <div style={{paddingTop: '20px'}}></div>\n\n                        <div>\n                            <label htmlFor=\"otherCommunications\" className='checkboxLabel'>\n                                <input type=\"checkbox\" \n                                    name='otherCommunications'\n                                    id='otherCommunications'\n                                    onChange={(ev)=>this.inputHandler(ev, 'otherCommunications')} \n                                    checked={this.state.formData.otherCommunications}\n                                />\n                                <div className='faceCheckboxBox' style={{backgroundColor: this.state.formData.otherCommunications ? '#803093' : 'white'}}>\n                                    {this.state.formData.otherCommunications ? <img src={checkSvg} alt=\"check\"/> : null}\n                                </div>\n                                <div className='checkboxLabelText'>OTHER COMMUNICATIONS</div>\n                            </label>\n                        </div>\n\n                        <div style={{paddingTop: '60px'}}></div>\n\n                        <button type='submit' onClick={this.submitFormHandler} className='submitButton'>SUBMIT</button>\n                        <button type='reset' onClick={this.resetFormHandler} className='resetButton'>RESET</button>\n\n                        <div style={{paddingTop: '60px'}}></div>\n\n                    </form>\n\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}